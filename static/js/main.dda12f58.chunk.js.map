{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Button","children","buttonProps","className","TimeSetter","title","value","idPrefix","handleClick","id","onClick","aria-label","formatNumber","num","slice","Timer","time","isTimeout","timerType","minutes","seconds","TimerControls","handlePlayPause","handleReset","useTimer","React","useState","setTime","isRunning","setIsRunning","setIsTimeout","useEffect","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","currTime","stopTimer","startTimer","resetTimer","setTimer","isAudioPlaying","audio","paused","ended","readyState","App","breakLength","setBreakLength","sessionLength","setSessionLength","setTimerType","isTimerRunning","audioRef","pauseBeep","pause","currentTime","play","setTimeout","clearTimeout","useTimeout","curr","aria-hidden","preload","src","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dda12f58.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.scss\";\n\nlet beepSoundUrl =\n  \"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\";\n\nconst appName = \"25+5 Clock\";\n\n// Shamelessly Copied from https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nfunction useInterval(callback, delay) {\n  const savedCallback = React.useRef();\n\n  // Remember the latest callback.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\nfunction useTimeout(callback, delay) {\n  const savedCallback = React.useRef();\n\n  // Remember the latest callback.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setTimeout(tick, delay);\n      return () => clearTimeout(id);\n    }\n  }, [delay]);\n}\n\nconst Button = ({ children, ...buttonProps }) => {\n  return (\n    <button {...buttonProps} className=\"button\">\n      {children}\n    </button>\n  );\n};\nconst TimeSetter = ({ title, value, idPrefix, handleClick }) => {\n  return (\n    <div className=\"time-setter\">\n      <h4 id={`${idPrefix}-label`}>{title}</h4>\n      <div className=\"time-setter__controls\">\n        <Button\n          id={`${idPrefix}-decrement`}\n          onClick={() => {\n            handleClick(-1);\n          }}\n          aria-label={`decrease ${title} by 1`}\n        >\n          &dArr;\n        </Button>\n        <span id={`${idPrefix}-length`} aria-label={title}>\n          {value}\n        </span>\n        <Button\n          id={`${idPrefix}-increment`}\n          onClick={() => {\n            handleClick(1);\n          }}\n          aria-label={`increase ${title} by 1`}\n        >\n          &uArr;\n        </Button>\n      </div>\n    </div>\n  );\n};\nconst formatNumber = (num) => {\n  return (\"0\" + num).slice(-2);\n};\nconst Timer = ({ time, isTimeout, timerType }) => {\n  return (\n    <div className={`timer ${isTimeout ? \"blink\" : \"\"}`}>\n      <h3 id=\"timer-label\" className=\"timer__label\">\n        {timerType}\n      </h3>\n      <div id=\"time-left\" className=\"timer__timeleft\">{`${formatNumber(\n        time.minutes\n      )}:${formatNumber(time.seconds)}`}</div>\n    </div>\n  );\n};\nconst TimerControls = ({ handlePlayPause, handleReset }) => {\n  return (\n    <div className=\"timer-controls\">\n      <Button id=\"start_stop\" onClick={handlePlayPause}>\n        &#9654;||\n      </Button>\n      <Button id=\"reset\" onClick={handleReset}>\n        &#10227;\n      </Button>\n    </div>\n  );\n};\n\nconst useTimer = (minutes) => {\n  const [time, setTime] = React.useState({\n    minutes: minutes,\n    seconds: 0,\n  });\n  const [isRunning, setIsRunning] = React.useState(false);\n  const [isTimeout, setIsTimeout] = React.useState(false);\n\n  React.useEffect(() => {\n    setTime({ minutes, seconds: 0 });\n  }, [minutes]);\n\n  const startTimer = () => {\n    setIsRunning(true);\n    setIsTimeout(false);\n  };\n  const tick = () => {\n    setTime((currTime) => {\n      if (currTime.seconds < 1) {\n        if (currTime.minutes === 0) {\n          setIsTimeout(true);\n          return {\n            minutes: 0,\n            seconds: 0,\n          };\n        }\n        return {\n          minutes: currTime.minutes - 1,\n          seconds: 59,\n        };\n      }\n      return {\n        minutes: currTime.minutes,\n        seconds: currTime.seconds - 1,\n      };\n    });\n  };\n\n  useInterval(tick, isRunning ? 1000 : null);\n\n  const stopTimer = () => {\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    stopTimer();\n    setTime(() => {\n      return {\n        minutes: minutes,\n        seconds: 0,\n      };\n    });\n  };\n  const setTimer = (minutes) => {\n    setTime(() => {\n      return { minutes, seconds: 0 };\n    });\n  };\n  return [\n    time,\n    isTimeout,\n    isRunning,\n    { startTimer, stopTimer, resetTimer, setTimer },\n  ];\n};\n\nconst isAudioPlaying = (audio) =>\n  !audio.paused && !audio.ended && audio.readyState;\n\nfunction App() {\n  const [breakLength, setBreakLength] = React.useState(5);\n  const [sessionLength, setSessionLength] = React.useState(25);\n  const [timerType, setTimerType] = React.useState(\"Session\");\n\n  const [\n    time,\n    isTimeout,\n    isTimerRunning,\n    { startTimer, stopTimer, resetTimer, setTimer },\n  ] = useTimer(sessionLength);\n\n  const handleBreakLengthChange = (value) => {\n    setBreakLength((curr) => {\n      if (value < 0) {\n        return curr < 2 ? 1 : curr + value;\n      } else {\n        return curr > 59 ? 60 : curr + value;\n      }\n    });\n  };\n  const handleSessionLengthChange = (value) => {\n    setSessionLength((curr) => {\n      if (value < 0) {\n        return curr < 2 ? 1 : curr + value;\n      } else {\n        return curr > 59 ? 60 : curr + value;\n      }\n    });\n  };\n  const handlePlayPause = () => {\n    pauseBeep(); // stop any audio playing\n    if (!isTimerRunning) {\n      startTimer();\n    } else {\n      stopTimer();\n    }\n  };\n  const audioRef = React.useRef();\n  const pauseBeep = () => {\n    if (audioRef.current) {\n      if (isAudioPlaying(audioRef.current)) {\n        audioRef.current.pause();\n        audioRef.current.currentTime = 0;\n      }\n    }\n  };\n  const playBeep = () => {\n    if (audioRef.current) {\n      if (!isAudioPlaying(audioRef.current)) {\n        audioRef.current.play();\n      }\n    }\n  };\n  const handleReset = () => {\n    pauseBeep();\n    resetTimer();\n    setTimerType(\"Session\");\n    setSessionLength(25);\n    setBreakLength(5);\n  };\n  const startSession = () => {\n    setTimerType(\"Session\");\n    setTimer(sessionLength);\n    startTimer();\n  };\n  const startBreak = () => {\n    setTimerType(\"Break\");\n    setTimer(breakLength);\n    startTimer();\n  };\n  const handleTimeout = () => {\n    if (timerType === \"Session\") {\n      startBreak();\n    } else {\n      startSession();\n    }\n  };\n  React.useEffect(() => {\n    if (isTimeout) {\n      playBeep();\n    }\n  }, [isTimeout]);\n\n  useTimeout(handleTimeout, isTimeout ? 3000 : null);\n\n  return (\n    <div>\n      <header>\n        <h2>{appName}</h2>\n      </header>\n      <section className=\"app\">\n        <div className=\"time-setters\">\n          <TimeSetter\n            title=\"Break length\"\n            idPrefix=\"break\"\n            value={breakLength}\n            handleClick={handleBreakLengthChange}\n            aria-label=\"Change break Length\"\n          />\n          <TimeSetter\n            title=\"Session length\"\n            idPrefix=\"session\"\n            value={sessionLength}\n            handleClick={handleSessionLengthChange}\n          />\n        </div>\n        <Timer time={time} isTimeout={isTimeout} timerType={timerType} />\n        <TimerControls\n          handlePlayPause={handlePlayPause}\n          handleReset={handleReset}\n        />\n        <audio\n          aria-hidden=\"true\"\n          id=\"beep\"\n          preload=\"auto\"\n          src={beepSoundUrl}\n          ref={audioRef}\n        ></audio>\n      </section>\n      <footer>Not so great Design by Afroz</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}