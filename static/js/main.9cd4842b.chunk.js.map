{"version":3,"sources":["hooks/useTimeout.js","hooks/useInterval.js","hooks/useTimer.js","components/TimeSetter.js","utils.js","components/Timer.js","components/TimerControls.js","App.js","constants.js","reportWebVitals.js","index.js"],"names":["useTimeout","callback","delay","savedCallback","React","useRef","useEffect","current","id","setTimeout","clearTimeout","useInterval","setInterval","clearInterval","useTimer","minutes","useState","seconds","time","setTime","isRunning","setIsRunning","isTimeout","setIsTimeout","currTime","stopTimer","startTimer","resetTimer","setTimer","TimeSetter","title","value","idPrefix","handleClick","className","onClick","aria-label","isAudioPlaying","audio","paused","ended","readyState","formatNumber","num","slice","Timer","timerType","TimerControls","handlePlayPause","handleReset","App","breakLength","setBreakLength","sessionLength","setSessionLength","setTimerType","isTimerRunning","audioRef","pauseBeep","pause","currentTime","play","curr","aria-hidden","preload","src","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cd4842b.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction useTimeout(callback, delay) {\n  const savedCallback = React.useRef();\n\n  // Remember the latest callback.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setTimeout(tick, delay);\n      return () => clearTimeout(id);\n    }\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import React from \"react\";\n\n// Shamelessly Copied from https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nfunction useInterval(callback, delay) {\n  const savedCallback = React.useRef();\n\n  // Remember the latest callback.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\nexport default useInterval;\n","import React from \"react\";\nimport useInterval from \"./useInterval\";\n\nconst useTimer = (minutes) => {\n  const [time, setTime] = React.useState({\n    minutes: minutes,\n    seconds: 0,\n  });\n  const [isRunning, setIsRunning] = React.useState(false);\n  const [isTimeout, setIsTimeout] = React.useState(false);\n\n  React.useEffect(() => {\n    setTime({ minutes, seconds: 0 });\n  }, [minutes]);\n\n  const startTimer = () => {\n    setIsRunning(true);\n    setIsTimeout(false);\n  };\n  const tick = () => {\n    setTime((currTime) => {\n      if (currTime.seconds < 1) {\n        if (currTime.minutes === 0) {\n          setIsTimeout(true);\n          return {\n            minutes: 0,\n            seconds: 0,\n          };\n        }\n        return {\n          minutes: currTime.minutes - 1,\n          seconds: 59,\n        };\n      }\n      return {\n        minutes: currTime.minutes,\n        seconds: currTime.seconds - 1,\n      };\n    });\n  };\n\n  useInterval(tick, isRunning ? 1000 : null);\n\n  const stopTimer = () => {\n    setIsRunning(false);\n  };\n  const resetTimer = () => {\n    stopTimer();\n    setTime(() => {\n      return {\n        minutes: minutes,\n        seconds: 0,\n      };\n    });\n  };\n  const setTimer = (minutes) => {\n    setTime(() => {\n      return { minutes, seconds: 0 };\n    });\n  };\n  return [\n    time,\n    isTimeout,\n    isRunning,\n    { startTimer, stopTimer, resetTimer, setTimer },\n  ];\n};\n\nexport default useTimer;\n","import React from \"react\";\n\nconst TimeSetter = ({ title, value, idPrefix, handleClick }) => {\n  return (\n    <div className=\"time-setter\">\n      <h4 id={`${idPrefix}-label`}>{title}</h4>\n      <div className=\"time-setter__controls\">\n        <button\n          id={`${idPrefix}-decrement`}\n          className=\"button\"\n          onClick={() => {\n            handleClick(-1);\n          }}\n          aria-label={`decrease ${title} by 1`}\n        >\n          &dArr;\n        </button>\n        <span id={`${idPrefix}-length`} aria-label={title}>\n          {value}\n        </span>\n        <button\n          id={`${idPrefix}-increment`}\n          className=\"button\"\n          onClick={() => {\n            handleClick(1);\n          }}\n          aria-label={`increase ${title} by 1`}\n        >\n          &uArr;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TimeSetter;\n","export const isAudioPlaying = (audio) =>\n  !audio.paused && !audio.ended && audio.readyState;\n\nexport const formatNumber = (num) => {\n  return (\"0\" + num).slice(-2);\n};\n","import React from \"react\";\nimport { formatNumber } from \"../utils\";\n\nconst Timer = ({ time, isTimeout, timerType }) => {\n  return (\n    <div className={`timer ${isTimeout ? \"blink\" : \"\"}`}>\n      <h3 id=\"timer-label\" className=\"timer__label\">\n        {timerType}\n      </h3>\n      <div id=\"time-left\" className=\"timer__timeleft\">\n        {`${formatNumber(time.minutes)}:${formatNumber(time.seconds)}`}\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React from \"react\";\n\nconst TimerControls = ({ handlePlayPause, handleReset }) => {\n  return (\n    <div className=\"timer-controls\">\n      <button\n        id=\"start_stop\"\n        className=\"button\"\n        onClick={handlePlayPause}\n        aria-label=\"start or stop timer\"\n      >\n        &#9654;||\n      </button>\n      <button\n        id=\"reset\"\n        className=\"button\"\n        onClick={handleReset}\n        aria-label=\"Reset timer\"\n      >\n        &#10227;\n      </button>\n    </div>\n  );\n};\n\nexport default TimerControls;\n","import React from \"react\";\nimport \"./App.scss\";\nimport useTimeout from \"./hooks/useTimeout\";\nimport useTimer from \"./hooks/useTimer\";\nimport TimeSetter from \"./components/TimeSetter\";\nimport Timer from \"./components/Timer\";\nimport TimerControls from \"./components/TimerControls\";\nimport { isAudioPlaying } from \"./utils\";\nimport { appName, beepSoundUrl } from \"./constants\";\n\nfunction App() {\n  const [breakLength, setBreakLength] = React.useState(5);\n  const [sessionLength, setSessionLength] = React.useState(25);\n  const [timerType, setTimerType] = React.useState(\"Session\");\n\n  const [\n    time,\n    isTimeout,\n    isTimerRunning,\n    { startTimer, stopTimer, resetTimer, setTimer },\n  ] = useTimer(sessionLength);\n\n  const handleBreakLengthChange = (value) => {\n    setBreakLength((curr) => {\n      if (value < 0) {\n        return curr < 2 ? 1 : curr + value;\n      } else {\n        return curr > 59 ? 60 : curr + value;\n      }\n    });\n  };\n  const handleSessionLengthChange = (value) => {\n    setSessionLength((curr) => {\n      if (value < 0) {\n        return curr < 2 ? 1 : curr + value;\n      } else {\n        return curr > 59 ? 60 : curr + value;\n      }\n    });\n  };\n  const handlePlayPause = () => {\n    pauseBeep(); // stop any audio playing\n    if (!isTimerRunning) {\n      startTimer();\n    } else {\n      stopTimer();\n    }\n  };\n  const audioRef = React.useRef();\n  const pauseBeep = () => {\n    if (audioRef.current) {\n      if (isAudioPlaying(audioRef.current)) {\n        audioRef.current.pause();\n        audioRef.current.currentTime = 0;\n      }\n    }\n  };\n  const playBeep = () => {\n    if (audioRef.current) {\n      if (!isAudioPlaying(audioRef.current)) {\n        audioRef.current.play();\n      }\n    }\n  };\n  const handleReset = () => {\n    pauseBeep();\n    resetTimer();\n    setTimerType(\"Session\");\n    setSessionLength(25);\n    setBreakLength(5);\n  };\n  const startSession = () => {\n    setTimerType(\"Session\");\n    setTimer(sessionLength);\n    startTimer();\n  };\n  const startBreak = () => {\n    setTimerType(\"Break\");\n    setTimer(breakLength);\n    startTimer();\n  };\n  const handleTimeout = () => {\n    if (timerType === \"Session\") {\n      startBreak();\n    } else {\n      startSession();\n    }\n  };\n  React.useEffect(() => {\n    if (isTimeout) {\n      playBeep();\n    }\n  }, [isTimeout]);\n\n  // wait for 3 seconds after timeout (blinking time)\n  useTimeout(handleTimeout, isTimeout ? 3000 : null);\n\n  return (\n    <div>\n      <header>\n        <h2>{appName}</h2>\n      </header>\n      <section className=\"app\">\n        <div className=\"time-setters\">\n          <TimeSetter\n            title=\"Break length\"\n            idPrefix=\"break\"\n            value={breakLength}\n            handleClick={handleBreakLengthChange}\n          />\n          <TimeSetter\n            title=\"Session length\"\n            idPrefix=\"session\"\n            value={sessionLength}\n            handleClick={handleSessionLengthChange}\n          />\n        </div>\n        <Timer time={time} isTimeout={isTimeout} timerType={timerType} />\n        <TimerControls\n          handlePlayPause={handlePlayPause}\n          handleReset={handleReset}\n        />\n        <audio\n          aria-hidden=\"true\"\n          id=\"beep\"\n          preload=\"auto\"\n          src={beepSoundUrl}\n          ref={audioRef}\n        ></audio>\n      </section>\n      <footer>developed by Afroz</footer>\n    </div>\n  );\n}\n\nexport default App;\n","export const beepSoundUrl =\n  \"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\";\n\nexport const appName = \"25+5 Clock\";\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}